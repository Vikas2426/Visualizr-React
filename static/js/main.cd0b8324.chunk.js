(this.webpackJsonpvizualizr=this.webpackJsonpvizualizr||[]).push([[0],{19:function(e,t,n){e.exports=n(32)},28:function(e,t,n){},29:function(e,t,n){},30:function(e,t,n){},31:function(e,t,n){e.exports=n.p+"static/media/v-logo.4697a594.png"},32:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(5),o=n.n(i),u=n(1),l=n(6),c=(n(28),n(29),function(e){return{type:"CHANGE_PROBLEM",payload:e}}),s=function(e){return{type:"CHANGE_INPUT_VALUE",payload:e}};var m=function(){var e=Object(u.c)((function(e){return e.problem})),t=Object(u.b)(),n=function(e){t({type:"CHANGE_ALGORITHM",payload:e.target.textContent})};return"add Numbers"===e?r.a.createElement("div",{className:"algo-btn-div"},r.a.createElement("button",{onClick:n},"Naive"),r.a.createElement("button",{onClick:n},"A.P."),r.a.createElement("button",{onClick:n},"Optimized A.P.")):"searching"===e?r.a.createElement("div",{className:"algo-btn-div"},r.a.createElement("button",{onClick:n},"Linear Search"),r.a.createElement("button",{onClick:n},"Binary Search")):"sorting"===e?r.a.createElement("div",{className:"algo-btn-div"},r.a.createElement("button",{onClick:n},"Bubble Sort"),r.a.createElement("button",{onClick:n},"Quick Sort"),r.a.createElement("button",{onClick:n},"Merge Sort")):""===e?r.a.createElement("div",{className:"algo-btn-div"},"Algorithm options appear hear."):void 0},d=n(15);var f=function(){var e=Object(u.c)((function(e){return e.data}));return console.log(e),r.a.createElement("div",{className:"chart-container"},r.a.createElement(d.a,{width:"100%",height:"100%",chartType:"LineChart",loader:r.a.createElement("div",null,"Loading Chart"),data:e,options:{hAxis:{title:"Input"},vAxis:{title:"Execution Time (ms)"}},rootProps:{"data-testid":"1"},animation:{duration:20}}))},p=(n(30),n(17)),h=n.n(p);var g=function(){var e=Object(u.c)((function(e){return e.algorithm}));return Object(a.useEffect)((function(){h.a.highlightAll()})),r.a.createElement("div",{id:"algoDiv"},r.a.createElement("pre",{id:"algorithm"},r.a.createElement("code",{className:"language-javascript",id:"code-content"},function(e){return"Naive"===e?"function addNumber(inputValue){ \n        var sum = 0;\n        for (let i = 0; i <= inputValue; i++){\n            sum += i;\n        }\n    }":"A.P."===e?"function addNumber = (inputValue) => {\n        let sum = inputValue * (inputValue - 1) / 2 ; \n      };":"Optimized A.P."===e?"function addNumber = (inputValue) => { \n        let sum = (inputValue / 2) * (inputValue - 1) ;\n      };":"Linear Search"===e?"function linearSearch(arr, key){\n        for(let i = 0; i < arr.length; i++){\n            if(arr[i] === key){\n                return i\n            }\n        }\n        return -1\n    }":"Binary Search"===e?"function binarySearch(sortedArray, key){\n        sortedArray.sort();\n        let start = 0;\n        let end = sortedArray.length - 1;\n    \n        while (start <= end) {\n            let middle = Math.floor((start + end) / 2);\n    \n            if (sortedArray[middle] === key) {\n                // found the key\n                return middle;\n            } else if (sortedArray[middle] < key) {\n                // continue searching to the right\n                start = middle + 1;\n            } else {\n                // search searching to the left\n                end = middle - 1;\n            }\n        }\n        // key wasn't found\n        return -1;\n    }":"Bubble Sort"===e?"function bubbleSort(inputArr) {\n        let n = inputArr.length;\n        \n        for(let i = 0; i < n; i++) {\n            for(let j = 0; j < n; j++) {\n                // Comparing and swapping the elements\n                if(inputArr[j] > inputArr[j+1]){\n                    let t = inputArr[j];\n                    inputArr[j] = inputArr[j+1];\n                    inputArr[j+1] = t;\n                }\n            }\n        }\n        return inputArr;\n    }":"Quick Sort"===e?'function quickSortIterative(arr) {\n        // Creating an array that we\'ll use as a stack, using the push() and pop() functions\n        stack = [];\n        \n        // Adding the entire initial array as an "unsorted subarray"\n        stack.push(0);\n        stack.push(arr.length - 1);\n        \n        // There isn\'t an explicit peek() function\n        // The loop repeats as long as we have unsorted subarrays\n        while(stack[stack.length - 1] >= 0){\n            \n            // Extracting the top unsorted subarray\n            end = stack.pop();\n            start = stack.pop();\n            \n            pivotIndex = partition(arr, start, end);\n            \n            // If there are unsorted elements to the "left" of the pivot,\n            // we add that subarray to the stack so we can sort it later\n            if (pivotIndex - 1 > start){\n                stack.push(start);\n                stack.push(pivotIndex - 1);\n            }\n            \n            // If there are unsorted elements to the "right" of the pivot,\n            // we add that subarray to the stack so we can sort it later\n            if (pivotIndex + 1 < end){\n                stack.push(pivotIndex + 1);\n                stack.push(end);\n            }\n        }\n    }':"Merge Sort"===e?"function mergeSort(array) {\n        const half = array.length / 2\n        \n        // Base case or terminating case\n        if(array.length < 2){\n          return array \n        }\n        \n        const left = array.splice(0, half)\n        return merge(mergeSort(left),mergeSort(array))\n      }\n\n    function merge(left, right) {\n        let arr = []\n        // Break out of loop if any one of the array gets empty\n        while (left.length && right.length) {\n            // Pick the smaller among the smallest element of left and right sub arrays \n            if (left[0] < right[0]) {\n                arr.push(left.shift())  \n            } else {\n                arr.push(right.shift()) \n            }\n        }\n        \n        // Concatenating the leftover elements\n        // (in case we didn't go through the entire left or right array)\n        return [ ...arr, ...left, ...right ]\n    }":""}(e))))};var b=function(){return r.a.createElement("div",{className:"code-container"},r.a.createElement(g,null))},v=n(18),E=function(e){for(var t=(new Date).getTime(),n=0,a=0;a<=e;a++)n+=a;return[(new Date).getTime()-t,n]},y=function(e){var t=(new Date).getTime(),n=e*(e+1)/2;return[(new Date).getTime()-t,n]},N=function(e){var t=(new Date).getTime(),n=e/2*(e+1);return[(new Date).getTime()-t,n]},A=function(e,t){switch(e){case"Naive":return E(t);case"A.P.":return y(t);case"Optimized A.P.":return N(t);default:return alert("returned")}},k=function(e,t){for(var n=(new Date).getTime(),a=0;a<1e8;a++);for(var r=0;r<e.length;r++){if(e[r]===t)return[(new Date).getTime()-n,"Found at "+r]}return[(new Date).getTime()-n,"not present"]},j=function(e,t){e.sort();for(var n=(new Date).getTime(),a=0;a<1e8;a++);for(var r=0,i=e.length-1;r<=i;){var o=Math.floor((r+i)/2);if(e[o]===t)return[(new Date).getTime()-n,"Found at "+o];e[o]<t?r=o+1:i=o-1}return[(new Date).getTime()-n,"not present"]},w=function(e,t,n){switch(t=t.map((function(e){return parseInt(e)})),n=parseInt(n),e){case"Linear Search":return k(t,n);case"Binary Search":return j(t,n);default:return alert("returned")}},C=n(4);function O(e,t,n){for(var a=e[n],r=t,i=t;i<n;i++)if(e[i]<a){var o=[e[r],e[i]];e[i]=o[0],e[r]=o[1],r++}var u=[e[n],e[r]];return e[r]=u[0],e[n]=u[1],r}var T=function(e,t){switch(t=t.map((function(e){return parseInt(e)})),e){case"Bubble Sort":return function(e){for(var t=(new Date).getTime(),n=e.length,a=0;a<n;a++)for(var r=0;r<n;r++)if(e[r]>e[r+1]){var i=e[r];e[r]=e[r+1],e[r+1]=i}return[(new Date).getTime()-t,e]}(t);case"Merge Sort":return function e(t){var n=t.length/2;if(t.length<2)return t;var a=t.splice(0,n);return function(e,t){var n=[];for(;e.length&&t.length;)e[0]<t[0]?n.push(e.shift()):n.push(t.shift());return[].concat(n,Object(C.a)(e),Object(C.a)(t))}(e(a),e(t))}(t);case"Quick Sort":return function(e){var t=(new Date).getTime(),n=[];n.push(0),n.push(e.length-1);for(;n[n.length-1]>=0;){var a=n.pop(),r=n.pop(),i=O(e,r,a);i-1>r&&(n.push(r),n.push(i-1)),i+1<a&&(n.push(i+1),n.push(a))}return[(new Date).getTime()-t,e]}(t);default:return alert("returned")}};var S=function(){var e=Object(u.c)((function(e){return e.problem})),t=Object(u.c)((function(e){return e.inputValue})),n=Object(u.c)((function(e){return e.algorithm})),a=Object(u.c)((function(e){return e.num})),i=Object(u.b)(),o=0;return r.a.createElement("div",{className:"form-container input-Form"},r.a.createElement("form",{className:"form-inline"},r.a.createElement("input",{type:"text",className:"form-input",id:"inlineFormInputName2",autoComplete:"off",value:t,onChange:function(t){return function(t){if("add Numbers"===e)i(s(t.target.value));else if("searching"===e||"sorting"===e){var n=t.target.value.split(",");i(s(n))}}(t)},placeholder:"add Numbers"===e?"any number":"searching"===e||"sorting"===e?"comma separated integer (n1,n2,n3)":""}),"searching"===e&&r.a.createElement("input",{type:"text",className:"form-input num",id:"inlineFormInputName2",autoComplete:"off",value:a,onChange:function(e){return i({type:"CHANGE_NUM",payload:e.target.value})},placeholder:"search for"}),r.a.createElement("button",{onClick:function(r){if(r.preventDefault(),""===n)alert("Please select an algorithm.");else{"add Numbers"===e?o=A(n,t):"searching"===e?o=w(n,t,a):"sorting"===e&&(o=T(n,t));var u=o,l=Object(v.a)(u,2),c=l[0],s=l[1];i(function(e){return{type:"CHANGE_RESULT",payload:e}}(s)),i(function(e){return{type:"CHANGE_DATA",payload:e}}(c))}},type:"submit",className:"form-btn body-btn",id:"submit"},"Submit")))};var D=function(){var e=Object(u.b)();return r.a.createElement("nav",{className:"navbar"},r.a.createElement("a",{className:"navbar-brand",href:"/"},r.a.createElement("img",{src:n(31),alt:"logo"}),"izualizr"),r.a.createElement("div",{className:"options"},r.a.createElement("button",{className:"addNumbersBtn",onClick:function(){e(c("add Numbers"))}},"Add Upto"),r.a.createElement("button",{className:"searchingBtn",onClick:function(){e(c("searching"))}},"Searching"),r.a.createElement("button",{className:"sortingBtn",onClick:function(){e(c("sorting"))}},"Sorting")))};var I=function(){var e=Object(u.c)((function(e){return e.result}));return r.a.createElement("div",{className:"result"},r.a.createElement("button",{disabled:!0},"Result"),r.a.createElement("button",{disabled:!0},e))};var x=function(){var e=(new Date).getFullYear();return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"App"},r.a.createElement(D,null),r.a.createElement(S,null),r.a.createElement(I,null),r.a.createElement(m,null),r.a.createElement("div",{className:"my-container"},r.a.createElement(f,null),r.a.createElement(b,null))),r.a.createElement("footer",null,"Copyright @ Vikas Choubey, India, ",e))},B=n(2),G={problem:"",inputValue:[],algorithm:"",data:[["Input","Time"],[0,0]],num:"",result:""},H=0,V=Object(l.b)((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:G,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case"CHANGE_PROBLEM":return Object(B.a)(Object(B.a)({},G),{},{problem:t.payload});case"CHANGE_ALGORITHM":return Object(B.a)(Object(B.a)({},e),{},{algorithm:t.payload});case"CHANGE_INPUT_VALUE":return Object(B.a)(Object(B.a)({},e),{},{inputValue:t.payload});case"CHANGE_DATA":return Object(B.a)(Object(B.a)({},e),{},{data:[].concat(Object(C.a)(e.data),[[H++,t.payload]])});case"CHANGE_NUM":return Object(B.a)(Object(B.a)({},e),{},{num:t.payload});case"CHANGE_RESULT":return Object(B.a)(Object(B.a)({},e),{},{result:t.payload});default:return e}}));o.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(u.a,{store:V},r.a.createElement(x,null))),document.getElementById("root"))}},[[19,1,2]]]);
//# sourceMappingURL=main.cd0b8324.chunk.js.map